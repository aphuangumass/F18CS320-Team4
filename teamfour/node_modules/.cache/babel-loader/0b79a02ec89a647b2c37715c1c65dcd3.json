{"ast":null,"code":"'use strict';\n/*!\n * ignore\n */\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\steve\\\\Documents\\\\GitHub\\\\F18CS320-Team4\\\\teamfour\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\steve\\\\Documents\\\\GitHub\\\\F18CS320-Team4\\\\teamfour\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\steve\\\\Documents\\\\GitHub\\\\F18CS320-Team4\\\\teamfour\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\steve\\\\Documents\\\\GitHub\\\\F18CS320-Team4\\\\teamfour\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\steve\\\\Documents\\\\GitHub\\\\F18CS320-Team4\\\\teamfour\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar MongooseMap = require('../types/map');\n\nvar SchemaType = require('../schematype');\n/*!\n * ignore\n */\n\n\nvar SchemaMap =\n/*#__PURE__*/\nfunction (_SchemaType) {\n  _inherits(SchemaMap, _SchemaType);\n\n  function SchemaMap(key, options) {\n    var _this;\n\n    _classCallCheck(this, SchemaMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SchemaMap).call(this, key, options, 'Map'));\n    _this.$isSchemaMap = true;\n    return _this;\n  }\n\n  _createClass(SchemaMap, [{\n    key: \"cast\",\n    value: function cast(val, doc) {\n      if (val instanceof MongooseMap) {\n        return val;\n      }\n\n      return new MongooseMap(val, this.path, doc, this.$__schemaType);\n    }\n  }]);\n\n  return SchemaMap;\n}(SchemaType);\n\nmodule.exports = SchemaMap;","map":null,"metadata":{},"sourceType":"script"}