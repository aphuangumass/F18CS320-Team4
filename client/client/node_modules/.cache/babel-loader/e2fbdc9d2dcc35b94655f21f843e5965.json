{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, GET_CURRENT_USER, SET_CURRENT_USER, USER_LOADING } from \"./types\"; // Register User\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    console.log(\"fetching\");\n    axios.post(\"http://localhost:5000/api/users/register\", userData).then(function (res) {\n      return history.push(\"/login\");\n    }) // re-direct to login on successful register\n    .catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login - get user token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post(\"http://localhost:5000/api/users/login\", userData).then(function (res) {\n      // Save to localStorage\n      // Set token to localStorage\n      var token = res.data.token;\n      localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n      setAuthToken(token); // Decode token to get user data\n\n      var decoded = jwt_decode(token); // Set current user\n\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Get current user\n\nexport var getCurrentUser = function getCurrentUser() {\n  return function (dispatch) {\n    dispatch(setUserLoading());\n    axios.get(\"http://localhost:5000/api/user/currentuser\").then(function (res) {\n      return dispatch({\n        type: GET_CURRENT_USER,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // User loading\n\nexport var setUserLoading = function setUserLoading() {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    // Remove token from local storage\n    localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n    setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\steve\\Documents\\GitHub\\F18CS320-Team4\\client\\client\\src\\actions\\authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","GET_CURRENT_USER","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","console","log","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","getCurrentUser","setUserLoading","get","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_CURRENT_USER,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  console.log(\"fetching\");\r\n  axios\r\n    .post(\"http://localhost:5000/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"http://localhost:5000/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n// Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// Get current user\r\nexport const getCurrentUser = () => dispatch => {\r\n  dispatch(setUserLoading());\r\n  axios\r\n    .get(\"http://localhost:5000/api/user/currentuser\")\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_CURRENT_USER,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};"]},"metadata":{},"sourceType":"module"}